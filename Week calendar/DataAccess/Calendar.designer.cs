#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Week_calendar.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dnn")]
	public partial class CalendarDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCALENDAR_MANAGER(CALENDAR_MANAGER instance);
    partial void UpdateCALENDAR_MANAGER(CALENDAR_MANAGER instance);
    partial void DeleteCALENDAR_MANAGER(CALENDAR_MANAGER instance);
    #endregion
		
		public CalendarDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CalendarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CALENDAR_MANAGER> CALENDAR_MANAGERs
		{
			get
			{
				return this.GetTable<CALENDAR_MANAGER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CALENDAR_MANAGER")]
	public partial class CALENDAR_MANAGER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Titel;
		
		private System.Nullable<System.DateTime> _Update;
		
		private string _Update_by;
		
		private string _Content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitelChanging(string value);
    partial void OnTitelChanged();
    partial void OnUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateChanged();
    partial void OnUpdate_byChanging(string value);
    partial void OnUpdate_byChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public CALENDAR_MANAGER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titel", DbType="NVarChar(500)")]
		public string Titel
		{
			get
			{
				return this._Titel;
			}
			set
			{
				if ((this._Titel != value))
				{
					this.OnTitelChanging(value);
					this.SendPropertyChanging();
					this._Titel = value;
					this.SendPropertyChanged("Titel");
					this.OnTitelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Update]", Storage="_Update", DbType="Date")]
		public System.Nullable<System.DateTime> Update
		{
			get
			{
				return this._Update;
			}
			set
			{
				if ((this._Update != value))
				{
					this.OnUpdateChanging(value);
					this.SendPropertyChanging();
					this._Update = value;
					this.SendPropertyChanged("Update");
					this.OnUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Update by]", Storage="_Update_by", DbType="NVarChar(50)")]
		public string Update_by
		{
			get
			{
				return this._Update_by;
			}
			set
			{
				if ((this._Update_by != value))
				{
					this.OnUpdate_byChanging(value);
					this.SendPropertyChanging();
					this._Update_by = value;
					this.SendPropertyChanged("Update_by");
					this.OnUpdate_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
